{"version":3,"sources":["./src/app/info-content-dialog.component.ts","./src/app/info-content-dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/polyfills.ts","./src/app/material-module.ts","./src/app/constants.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit, Inject} from '@angular/core';\r\nimport {FormGroup, FormBuilder, Validators, ValidationErrors} from '@angular/forms';\r\nimport {MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA, MatDialogModule} from '@angular/material/dialog';\r\nimport {IEntry, EGender} from './constants';\r\n\r\n\r\n@Component({\r\n  selector: 'info-content-dialog',\r\n  templateUrl: 'info-content-dialog.component.html',\r\n})\r\nexport class InfoContentDialogComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  title: string;\r\n  // model: IEntry;\r\n  EGender: any = EGender;\r\n\r\n  constructor(public fb: FormBuilder,\r\n              public dialogRef: MatDialogRef<InfoContentDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n    this.title = data.title;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.form = this.fb.group({\r\n      name: [, {validators: [Validators.required], updateOn: 'change'}],\r\n      email: [, {validators: [Validators.required, Validators.email], updateOn: 'change'}],\r\n      age: [, {updateOn: 'change'}],\r\n      gender: [, {validators: [Validators.required], updateOn: 'change'}],\r\n    });\r\n\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.form.valid) {\r\n      this.dialogRef.close(this.form.value);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    // this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>{{title}}</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <!--<p>An app's components typically define many views, arranged hierarchically. Angular provides\r\n  the Router service to help you define navigation paths among views. The router provides\r\n  sophisticated in-browser navigational capabilities.</p>-->\r\n\r\n\r\n  <form [formGroup]=\"form\" (submit)=\"submitForm()\" novalidate>\r\n    <!-- Name -->\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Name *</mat-label>\r\n      <input matInput placeholder=\"Name\" formControlName=\"name\">\r\n      <mat-error *ngIf=\"form.controls.name.hasError('required')\">Name is <strong>required</strong></mat-error>\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <!-- Age -->\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Age</mat-label>\r\n      <input matInput placeholder=\"Age\" formControlName=\"age\" type=\"number\" min=\"1\" max=\"115\" >\r\n    </mat-form-field><br>\r\n\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Gender *</mat-label>\r\n      <mat-select matNativeControl formControlName=\"gender\">\r\n        <mat-option>None</mat-option>\r\n        <mat-option [value]=\"EGender.Male\">{{EGender.Male}}</mat-option>\r\n        <mat-option [value]=\"EGender.Female\">{{EGender.Female}}</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"form.controls.gender.hasError('required')\">Gender is <strong>required</strong></mat-error>\r\n    </mat-form-field><br>\r\n\r\n    <!-- Email -->\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Email *</mat-label>\r\n      <input matInput formControlName=\"email\" placeholder=\"Ex. mail@gmail.com\">\r\n      <mat-error *ngIf=\"form.controls.email.hasError('email') && !form.controls.email.hasError('required')\">\r\n        Please enter a valid email address\r\n      </mat-error>\r\n\r\n      <mat-error *ngIf=\"form.controls.email.hasError('required')\">Email is <strong>required</strong></mat-error>\r\n    </mat-form-field><br>\r\n    <br>\r\n\r\n  </form>\r\n\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button [mat-dialog-close]=\"false\">Cancel</button>\r\n  <button mat-raised-button (click)=\"submitForm()\" [disabled]=\"!form.valid\" mat-dialog-close type=\"submit\">Submit</button>\r\n  <!--<button mat-raised-button [disabled]=\"!form.valid\" [mat-dialog-close]=\"true\" cdkFocusInitial>Submit</button>-->\r\n</mat-dialog-actions>\r\n","import {Component, OnInit, Inject} from '@angular/core';\r\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\r\nimport {InfoContentDialogComponent} from './info-content-dialog.component';\r\nimport {EGender, IEntry} from './constants';\r\n\r\n/**\r\n * @title Dialog with header, scrollable content and actions\r\n */\r\n@Component({\r\n  selector: 'app-component',\r\n  templateUrl: 'app.component.html',\r\n})\r\nexport class AppComponent {\r\n\r\n  // public entry: IEntry = {name: 'maria', age: 27, email: 'ssss@goggo.com', gender: EGender.Male};\r\n  public entries: IEntry[] = [];\r\n\r\n  constructor(public dialog: MatDialog) {\r\n  }\r\n\r\n  openDialog() {\r\n\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n\r\n    dialogConfig.data = {\r\n      title: 'Add Information',\r\n    };\r\n\r\n    const dialogRef = this.dialog.open(InfoContentDialogComponent, dialogConfig);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!!result) {\r\n        this.entries.push(result);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */\r\n","<div class=\"center\" layout-align=\"start center\" flex layout=\"row\">\r\n  <button mat-button\r\n          (click)=\"openDialog()\"\r\n  >{{'Add Information'.toUpperCase()}}\r\n  </button>\r\n</div>\r\n\r\n<ng-template #emptyEntriesTpl><p class=\"center\">No entries, please press \"ADD INFORMARION\" button</p></ng-template>\r\n<div  class=\"content\" fxLayout='row' fxLayoutWrap class=\"cards\">\r\n\r\n  <div *ngIf=\"entries?.length; else emptyEntriesTpl\" fxFlex=\"20\" class=\"cards-list\">\r\n\r\n    <mat-card class=\"card-entry\" *ngFor=\"let entry of entries\">\r\n      <mat-card-header>\r\n        <mat-card-title><h1>Thank You!</h1></mat-card-title>\r\n        <mat-card-subtitle>You have successfully added your details</mat-card-subtitle>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <table cellspacing=\"0\" cellpadding=\"0\">\r\n          <tr>\r\n            <td>\r\n              <div>Name:</div>\r\n              <p class=\"mat-card-subtitle\">{{entry.name}}</p>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>\r\n              <div>Age:</div>\r\n              <p class=\"mat-card-subtitle\">{{entry.age}}</p>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>\r\n              <div>Email:</div>\r\n              <p class=\"mat-card-subtitle\">{{entry.email}}</p>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>\r\n              <div>Gender:</div>\r\n              <p class=\"mat-card-subtitle\">{{entry.gender}}</p>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n\r\n        <!--{{entry|json}}-->\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license -->\r\n","import 'zone.js/dist/zone';\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */\r\n","export enum EGender {Male = 'Male', Female = 'Female'}\n\nexport interface IEntry {\n  name: string;\n  email: string;\n  gender: EGender;\n  age: number;\n}\n","import './polyfills';\r\n\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {DemoMaterialModule} from './app/material-module';\r\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\r\n\r\nimport {MAT_DIALOG_DEFAULT_OPTIONS} from '@angular/material/dialog';\r\nimport {InfoContentDialogComponent} from './app/info-content-dialog.component';\r\nimport {AppComponent} from './app/app.component';\r\n\r\n// Default MatFormField appearance to 'fill' as that is the new recommended approach and the\r\n// `legacy` and `standard` appearances are scheduled for deprecation in version 10.\r\n// This makes the examples that use MatFormField render the same in StackBlitz as on the docs site.\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    DemoMaterialModule,\r\n    MatNativeDateModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  entryComponents: [\r\n    AppComponent,\r\n    InfoContentDialogComponent\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    InfoContentDialogComponent\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  providers: [\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\r\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: false} }\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}